/* automatically generated by rust-bindgen */

pub const SEVERITY_SUCCESS: u32 = 0;
pub const SEVERITY_ERROR: u32 = 1;
pub const _STDINT_H: u32 = 1;
pub const _FEATURES_H: u32 = 1;
pub const _DEFAULT_SOURCE: u32 = 1;
pub const __USE_ISOC11: u32 = 1;
pub const __USE_ISOC99: u32 = 1;
pub const __USE_ISOC95: u32 = 1;
pub const __USE_POSIX_IMPLICITLY: u32 = 1;
pub const _POSIX_SOURCE: u32 = 1;
pub const _POSIX_C_SOURCE: u32 = 200809;
pub const __USE_POSIX: u32 = 1;
pub const __USE_POSIX2: u32 = 1;
pub const __USE_POSIX199309: u32 = 1;
pub const __USE_POSIX199506: u32 = 1;
pub const __USE_XOPEN2K: u32 = 1;
pub const __USE_XOPEN2K8: u32 = 1;
pub const _ATFILE_SOURCE: u32 = 1;
pub const __USE_MISC: u32 = 1;
pub const __USE_ATFILE: u32 = 1;
pub const __USE_FORTIFY_LEVEL: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_GETS: u32 = 0;
pub const _STDC_PREDEF_H: u32 = 1;
pub const __STDC_IEC_559__: u32 = 1;
pub const __STDC_IEC_559_COMPLEX__: u32 = 1;
pub const __STDC_ISO_10646__: u32 = 201706;
pub const __STDC_NO_THREADS__: u32 = 1;
pub const __GNU_LIBRARY__: u32 = 6;
pub const __GLIBC__: u32 = 2;
pub const __GLIBC_MINOR__: u32 = 27;
pub const _SYS_CDEFS_H: u32 = 1;
pub const __glibc_c99_flexarr_available: u32 = 1;
pub const __WORDSIZE: u32 = 64;
pub const __WORDSIZE_TIME64_COMPAT32: u32 = 1;
pub const __SYSCALL_WORDSIZE: u32 = 64;
pub const __HAVE_GENERIC_SELECTION: u32 = 1;
pub const __GLIBC_USE_LIB_EXT2: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_TYPES_EXT: u32 = 0;
pub const _BITS_TYPES_H: u32 = 1;
pub const _BITS_TYPESIZES_H: u32 = 1;
pub const __OFF_T_MATCHES_OFF64_T: u32 = 1;
pub const __INO_T_MATCHES_INO64_T: u32 = 1;
pub const __RLIM_T_MATCHES_RLIM64_T: u32 = 1;
pub const __FD_SETSIZE: u32 = 1024;
pub const _BITS_WCHAR_H: u32 = 1;
pub const _BITS_STDINT_INTN_H: u32 = 1;
pub const _BITS_STDINT_UINTN_H: u32 = 1;
pub const INT8_MIN: i32 = -128;
pub const INT16_MIN: i32 = -32768;
pub const INT32_MIN: i32 = -2147483648;
pub const INT8_MAX: u32 = 127;
pub const INT16_MAX: u32 = 32767;
pub const INT32_MAX: u32 = 2147483647;
pub const UINT8_MAX: u32 = 255;
pub const UINT16_MAX: u32 = 65535;
pub const UINT32_MAX: u32 = 4294967295;
pub const INT_LEAST8_MIN: i32 = -128;
pub const INT_LEAST16_MIN: i32 = -32768;
pub const INT_LEAST32_MIN: i32 = -2147483648;
pub const INT_LEAST8_MAX: u32 = 127;
pub const INT_LEAST16_MAX: u32 = 32767;
pub const INT_LEAST32_MAX: u32 = 2147483647;
pub const UINT_LEAST8_MAX: u32 = 255;
pub const UINT_LEAST16_MAX: u32 = 65535;
pub const UINT_LEAST32_MAX: u32 = 4294967295;
pub const INT_FAST8_MIN: i32 = -128;
pub const INT_FAST16_MIN: i64 = -9223372036854775808;
pub const INT_FAST32_MIN: i64 = -9223372036854775808;
pub const INT_FAST8_MAX: u32 = 127;
pub const INT_FAST16_MAX: u64 = 9223372036854775807;
pub const INT_FAST32_MAX: u64 = 9223372036854775807;
pub const UINT_FAST8_MAX: u32 = 255;
pub const UINT_FAST16_MAX: i32 = -1;
pub const UINT_FAST32_MAX: i32 = -1;
pub const INTPTR_MIN: i64 = -9223372036854775808;
pub const INTPTR_MAX: u64 = 9223372036854775807;
pub const UINTPTR_MAX: i32 = -1;
pub const PTRDIFF_MIN: i64 = -9223372036854775808;
pub const PTRDIFF_MAX: u64 = 9223372036854775807;
pub const SIG_ATOMIC_MIN: i32 = -2147483648;
pub const SIG_ATOMIC_MAX: u32 = 2147483647;
pub const SIZE_MAX: i32 = -1;
pub const WINT_MIN: u32 = 0;
pub const WINT_MAX: u32 = 4294967295;
pub type HRESULT = ::std::os::raw::c_int;
pub type __u_char = ::std::os::raw::c_uchar;
pub type __u_short = ::std::os::raw::c_ushort;
pub type __u_int = ::std::os::raw::c_uint;
pub type __u_long = ::std::os::raw::c_ulong;
pub type __int8_t = ::std::os::raw::c_schar;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_long;
pub type __uint64_t = ::std::os::raw::c_ulong;
pub type __quad_t = ::std::os::raw::c_long;
pub type __u_quad_t = ::std::os::raw::c_ulong;
pub type __intmax_t = ::std::os::raw::c_long;
pub type __uintmax_t = ::std::os::raw::c_ulong;
pub type __dev_t = ::std::os::raw::c_ulong;
pub type __uid_t = ::std::os::raw::c_uint;
pub type __gid_t = ::std::os::raw::c_uint;
pub type __ino_t = ::std::os::raw::c_ulong;
pub type __ino64_t = ::std::os::raw::c_ulong;
pub type __mode_t = ::std::os::raw::c_uint;
pub type __nlink_t = ::std::os::raw::c_ulong;
pub type __off_t = ::std::os::raw::c_long;
pub type __off64_t = ::std::os::raw::c_long;
pub type __pid_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __fsid_t {
    pub __val: [::std::os::raw::c_int; 2usize],
}
#[test]
fn bindgen_test_layout___fsid_t() {
    assert_eq!(
        ::std::mem::size_of::<__fsid_t>(),
        8usize,
        concat!("Size of: ", stringify!(__fsid_t))
    );
    assert_eq!(
        ::std::mem::align_of::<__fsid_t>(),
        4usize,
        concat!("Alignment of ", stringify!(__fsid_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<__fsid_t>())).__val as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__fsid_t),
            "::",
            stringify!(__val)
        )
    );
}
pub type __clock_t = ::std::os::raw::c_long;
pub type __rlim_t = ::std::os::raw::c_ulong;
pub type __rlim64_t = ::std::os::raw::c_ulong;
pub type __id_t = ::std::os::raw::c_uint;
pub type __time_t = ::std::os::raw::c_long;
pub type __useconds_t = ::std::os::raw::c_uint;
pub type __suseconds_t = ::std::os::raw::c_long;
pub type __daddr_t = ::std::os::raw::c_int;
pub type __key_t = ::std::os::raw::c_int;
pub type __clockid_t = ::std::os::raw::c_int;
pub type __timer_t = *mut ::std::os::raw::c_void;
pub type __blksize_t = ::std::os::raw::c_long;
pub type __blkcnt_t = ::std::os::raw::c_long;
pub type __blkcnt64_t = ::std::os::raw::c_long;
pub type __fsblkcnt_t = ::std::os::raw::c_ulong;
pub type __fsblkcnt64_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt64_t = ::std::os::raw::c_ulong;
pub type __fsword_t = ::std::os::raw::c_long;
pub type __ssize_t = ::std::os::raw::c_long;
pub type __syscall_slong_t = ::std::os::raw::c_long;
pub type __syscall_ulong_t = ::std::os::raw::c_ulong;
pub type __loff_t = __off64_t;
pub type __caddr_t = *mut ::std::os::raw::c_char;
pub type __intptr_t = ::std::os::raw::c_long;
pub type __socklen_t = ::std::os::raw::c_uint;
pub type __sig_atomic_t = ::std::os::raw::c_int;
pub type int_least8_t = ::std::os::raw::c_schar;
pub type int_least16_t = ::std::os::raw::c_short;
pub type int_least32_t = ::std::os::raw::c_int;
pub type int_least64_t = ::std::os::raw::c_long;
pub type uint_least8_t = ::std::os::raw::c_uchar;
pub type uint_least16_t = ::std::os::raw::c_ushort;
pub type uint_least32_t = ::std::os::raw::c_uint;
pub type uint_least64_t = ::std::os::raw::c_ulong;
pub type int_fast8_t = ::std::os::raw::c_schar;
pub type int_fast16_t = ::std::os::raw::c_long;
pub type int_fast32_t = ::std::os::raw::c_long;
pub type int_fast64_t = ::std::os::raw::c_long;
pub type uint_fast8_t = ::std::os::raw::c_uchar;
pub type uint_fast16_t = ::std::os::raw::c_ulong;
pub type uint_fast32_t = ::std::os::raw::c_ulong;
pub type uint_fast64_t = ::std::os::raw::c_ulong;
pub type intmax_t = __intmax_t;
pub type uintmax_t = __uintmax_t;
pub type BMDDisplayMode = u32;
pub const _BMDDisplayMode_bmdModeNTSC: _BMDDisplayMode = 1853125475;
pub const _BMDDisplayMode_bmdModeNTSC2398: _BMDDisplayMode = 1853108787;
pub const _BMDDisplayMode_bmdModePAL: _BMDDisplayMode = 1885432864;
pub const _BMDDisplayMode_bmdModeNTSCp: _BMDDisplayMode = 1853125488;
pub const _BMDDisplayMode_bmdModePALp: _BMDDisplayMode = 1885432944;
pub const _BMDDisplayMode_bmdModeHD1080p2398: _BMDDisplayMode = 842231923;
pub const _BMDDisplayMode_bmdModeHD1080p24: _BMDDisplayMode = 842297459;
pub const _BMDDisplayMode_bmdModeHD1080p25: _BMDDisplayMode = 1215312437;
pub const _BMDDisplayMode_bmdModeHD1080p2997: _BMDDisplayMode = 1215312441;
pub const _BMDDisplayMode_bmdModeHD1080p30: _BMDDisplayMode = 1215312688;
pub const _BMDDisplayMode_bmdModeHD1080i50: _BMDDisplayMode = 1214854448;
pub const _BMDDisplayMode_bmdModeHD1080i5994: _BMDDisplayMode = 1214854457;
pub const _BMDDisplayMode_bmdModeHD1080i6000: _BMDDisplayMode = 1214854704;
pub const _BMDDisplayMode_bmdModeHD1080p50: _BMDDisplayMode = 1215313200;
pub const _BMDDisplayMode_bmdModeHD1080p5994: _BMDDisplayMode = 1215313209;
pub const _BMDDisplayMode_bmdModeHD1080p6000: _BMDDisplayMode = 1215313456;
pub const _BMDDisplayMode_bmdModeHD720p50: _BMDDisplayMode = 1752184112;
pub const _BMDDisplayMode_bmdModeHD720p5994: _BMDDisplayMode = 1752184121;
pub const _BMDDisplayMode_bmdModeHD720p60: _BMDDisplayMode = 1752184368;
pub const _BMDDisplayMode_bmdMode2k2398: _BMDDisplayMode = 845886003;
pub const _BMDDisplayMode_bmdMode2k24: _BMDDisplayMode = 845886004;
pub const _BMDDisplayMode_bmdMode2k25: _BMDDisplayMode = 845886005;
pub const _BMDDisplayMode_bmdMode2kDCI2398: _BMDDisplayMode = 845427251;
pub const _BMDDisplayMode_bmdMode2kDCI24: _BMDDisplayMode = 845427252;
pub const _BMDDisplayMode_bmdMode2kDCI25: _BMDDisplayMode = 845427253;
pub const _BMDDisplayMode_bmdMode4K2160p2398: _BMDDisplayMode = 879440435;
pub const _BMDDisplayMode_bmdMode4K2160p24: _BMDDisplayMode = 879440436;
pub const _BMDDisplayMode_bmdMode4K2160p25: _BMDDisplayMode = 879440437;
pub const _BMDDisplayMode_bmdMode4K2160p2997: _BMDDisplayMode = 879440441;
pub const _BMDDisplayMode_bmdMode4K2160p30: _BMDDisplayMode = 879440688;
pub const _BMDDisplayMode_bmdMode4K2160p50: _BMDDisplayMode = 879441200;
pub const _BMDDisplayMode_bmdMode4K2160p5994: _BMDDisplayMode = 879441209;
pub const _BMDDisplayMode_bmdMode4K2160p60: _BMDDisplayMode = 879441456;
pub const _BMDDisplayMode_bmdMode4kDCI2398: _BMDDisplayMode = 878981683;
pub const _BMDDisplayMode_bmdMode4kDCI24: _BMDDisplayMode = 878981684;
pub const _BMDDisplayMode_bmdMode4kDCI25: _BMDDisplayMode = 878981685;
pub const _BMDDisplayMode_bmdModeCintelRAW: _BMDDisplayMode = 1920426857;
pub const _BMDDisplayMode_bmdModeCintelCompressedRAW: _BMDDisplayMode = 1920426851;
pub const _BMDDisplayMode_bmdModeUnknown: _BMDDisplayMode = 1769303659;
pub type _BMDDisplayMode = u32;
pub type BMDFieldDominance = u32;
pub const _BMDFieldDominance_bmdUnknownFieldDominance: _BMDFieldDominance = 0;
pub const _BMDFieldDominance_bmdLowerFieldFirst: _BMDFieldDominance = 1819244402;
pub const _BMDFieldDominance_bmdUpperFieldFirst: _BMDFieldDominance = 1970303090;
pub const _BMDFieldDominance_bmdProgressiveFrame: _BMDFieldDominance = 1886547815;
pub const _BMDFieldDominance_bmdProgressiveSegmentedFrame: _BMDFieldDominance = 1886610976;
pub type _BMDFieldDominance = u32;
pub type BMDPixelFormat = u32;
pub const _BMDPixelFormat_bmdFormat8BitYUV: _BMDPixelFormat = 846624121;
pub const _BMDPixelFormat_bmdFormat10BitYUV: _BMDPixelFormat = 1983000880;
pub const _BMDPixelFormat_bmdFormat8BitARGB: _BMDPixelFormat = 32;
pub const _BMDPixelFormat_bmdFormat8BitBGRA: _BMDPixelFormat = 1111970369;
pub const _BMDPixelFormat_bmdFormat10BitRGB: _BMDPixelFormat = 1915892016;
pub const _BMDPixelFormat_bmdFormat12BitRGB: _BMDPixelFormat = 1378955842;
pub const _BMDPixelFormat_bmdFormat12BitRGBLE: _BMDPixelFormat = 1378955852;
pub const _BMDPixelFormat_bmdFormat10BitRGBXLE: _BMDPixelFormat = 1378955372;
pub const _BMDPixelFormat_bmdFormat10BitRGBX: _BMDPixelFormat = 1378955362;
pub const _BMDPixelFormat_bmdFormatH265: _BMDPixelFormat = 1751479857;
pub const _BMDPixelFormat_bmdFormatDNxHR: _BMDPixelFormat = 1096180840;
pub const _BMDPixelFormat_bmdFormat12BitRAWGRBG: _BMDPixelFormat = 1915826800;
pub const _BMDPixelFormat_bmdFormat12BitRAWJPEG: _BMDPixelFormat = 1915827824;
pub type _BMDPixelFormat = u32;
pub type BMDDisplayModeFlags = u32;
pub const _BMDDisplayModeFlags_bmdDisplayModeSupports3D: _BMDDisplayModeFlags = 1;
pub const _BMDDisplayModeFlags_bmdDisplayModeColorspaceRec601: _BMDDisplayModeFlags = 2;
pub const _BMDDisplayModeFlags_bmdDisplayModeColorspaceRec709: _BMDDisplayModeFlags = 4;
pub type _BMDDisplayModeFlags = u32;
extern "C" {
    pub fn cdecklink_free_string(str: *const ::std::os::raw::c_char);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cdecklink_iterator {
    _unused: [u8; 0],
}
pub type cdecklink_iterator_t = cdecklink_iterator;
extern "C" {
    pub fn cdecklink_create_iterator() -> *mut cdecklink_iterator_t;
}
extern "C" {
    pub fn cdecklink_destroy_iterator(it: *mut cdecklink_iterator_t);
}
extern "C" {
    pub fn cdecklink_api_version(it: *mut cdecklink_iterator_t) -> *const ::std::os::raw::c_char;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cdecklink_device {
    _unused: [u8; 0],
}
pub type cdecklink_device_t = cdecklink_device;
extern "C" {
    pub fn cdecklink_next_device(
        it: *mut cdecklink_iterator_t,
        device: *mut *mut cdecklink_device_t,
    ) -> HRESULT;
}
extern "C" {
    pub fn cdecklink_destroy_device(device: *mut cdecklink_device_t);
}
extern "C" {
    pub fn cdecklink_device_model_name(
        device: *mut cdecklink_device_t,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn cdecklink_device_display_name(
        device: *mut cdecklink_device_t,
    ) -> *const ::std::os::raw::c_char;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cdecklink_device_output {
    _unused: [u8; 0],
}
pub type cdecklink_device_output_t = cdecklink_device_output;
extern "C" {
    pub fn cdecklink_device_output_cast(
        device: *mut cdecklink_device_t,
    ) -> *mut cdecklink_device_output_t;
}
extern "C" {
    pub fn cdecklink_destroy_device_output(output: *mut cdecklink_device_output_t);
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cdecklink_display_mode {
    _unused: [u8; 0],
}
pub type cdecklink_display_mode_t = cdecklink_display_mode;
extern "C" {
    pub fn cdecklink_display_mode_name(
        mode: *mut cdecklink_display_mode_t,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn cdecklink_display_mode_mode(mode: *mut cdecklink_display_mode_t) -> BMDDisplayMode;
}
extern "C" {
    pub fn cdecklink_display_mode_width(
        mode: *mut cdecklink_display_mode_t,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn cdecklink_display_mode_height(
        mode: *mut cdecklink_display_mode_t,
    ) -> ::std::os::raw::c_long;
}
extern "C" {
    pub fn cdecklink_display_mode_framerate(
        mode: *mut cdecklink_display_mode_t,
        duration: *mut i64,
        scale: *mut i64,
    ) -> HRESULT;
}
extern "C" {
    pub fn cdecklink_display_mode_field_dominance(
        mode: *mut cdecklink_display_mode_t,
    ) -> BMDFieldDominance;
}
extern "C" {
    pub fn cdecklink_display_mode_flags(mode: *mut cdecklink_display_mode_t)
        -> BMDDisplayModeFlags;
}
