/* automatically generated by rust-bindgen */

pub type HRESULT = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cdecklink_iterator {
    _unused: [u8; 0],
}
pub type cdecklink_iterator_t = cdecklink_iterator;
extern "C" {
    pub fn cdecklink_create_iterator() -> *mut cdecklink_iterator_t;
}
extern "C" {
    pub fn cdecklink_destroy_iterator(it: *mut cdecklink_iterator_t);
}
extern "C" {
    pub fn cdecklink_api_version(it: *mut cdecklink_iterator_t) -> *const ::std::os::raw::c_char;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cdecklink_device {
    _unused: [u8; 0],
}
pub type cdecklink_device_t = cdecklink_device;
extern "C" {
    pub fn cdecklink_next_device(
        it: *mut cdecklink_iterator_t,
        device: *mut *mut cdecklink_device_t,
    ) -> HRESULT;
}
extern "C" {
    pub fn cdecklink_destroy_device(device: *mut cdecklink_device_t);
}
extern "C" {
    pub fn cdecklink_device_model_name(
        device: *mut cdecklink_device_t,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn cdecklink_device_display_name(
        device: *mut cdecklink_device_t,
    ) -> *const ::std::os::raw::c_char;
}
